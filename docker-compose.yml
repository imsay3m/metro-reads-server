# Define a reusable block for the environment variables
x-django-env: &django-env
    environment:
        - DB_NAME=${DB_NAME}
        - DB_USER=${DB_USER}
        - DB_PASS=${DB_PASS}
        - DB_HOST=db
        - DB_PORT=5432
        - REDIS_HOST=redis
        - REDIS_PORT=6379
        - SECRET_KEY=${SECRET_KEY}
        - DEBUG=${DEBUG}
        - DJANGO_ENV=development

services:
    db:
        image: postgres:17.5-alpine
        container_name: metro_reads_db
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        environment:
            - POSTGRES_DB=${DB_NAME}
            - POSTGRES_USER=${DB_USER}
            - POSTGRES_PASSWORD=${DB_PASS}

    redis:
        image: redis:8.0.3-alpine
        container_name: metro_reads_redis

    nginx:
        image: nginx:1.28.0-alpine-slim
        container_name: metro_reads_nginx
        ports:
            - "80:80"
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
            - ./media:/app/media
            - static_volume:/app/staticfiles
        depends_on:
            - web

    web:
        build:
            context: .
        image: metro-reads-app:latest
        container_name: metro_reads_web
        command:
            [
                "sh",
                "-c",
                "python manage.py createsuperuser_from_env && gunicorn config.wsgi:application --bind 0.0.0.0:8000",
            ]
        volumes:
            - .:/app
            - ./media:/app/media
            - static_volume:/app/staticfiles
        <<: *django-env
        depends_on:
            - db
            - redis

    celery:
        image: metro-reads-app:latest
        container_name: metro_reads_celery_worker
        command: ["celery", "-A", "config", "worker", "--loglevel=info"]
        volumes:
            - .:/app
        <<: *django-env
        depends_on:
            - web
            - db
            - redis

    celery-beat:
        image: metro-reads-app:latest
        container_name: metro_reads_celery_beat
        command:
            [
                "celery",
                "-A",
                "config",
                "beat",
                "--loglevel=info",
                "--scheduler",
                "django_celery_beat.schedulers:DatabaseScheduler",
            ]
        volumes:
            - .:/app
        <<: *django-env
        depends_on:
            - web
            - db
            - redis
volumes:
    postgres_data:
    static_volume:
